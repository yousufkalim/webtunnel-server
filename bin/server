#!/usr/bin/env node

var cluster = require('cluster');
var debug = require('debug')('localtunnel');
var localenv = require('localenv');

if (cluster.isMaster) {
    cluster.on('exit', function() {
        debug('child died, restarting');
        cluster.fork();
    });

    cluster.fork();
    return;
}

require('stackup');
var log = require('bookrc');
var optimist = require('optimist');

var argv = optimist
    .usage('Usage: $0 --port [num]')
    .options('secure', {
        default: false,
        describe: 'use this flag to indicate proxy over https'
    })
    .options('port', {
        default: '80',
        describe: 'listen on this port for outside requests'
    })
    .options('max-sockets', {
        default: 10,
        describe: 'maximum number of tcp sockets each client is allowed to establish at one time (the tunnels)'
    })
    .argv;

if (argv.help) {
    optimist.showHelp();
    process.exit();
}

var server = require('../server')({
    max_tcp_sockets: argv['max-sockets'],
    secure: argv.secure
});

server.listen(argv.port, function() {
    debug('server listening on port: %d', server.address().port);
});

// vim: ft=javascript

